{"version":3,"sources":["index.js"],"names":["constraints","video","facingMode","audio","cameraView","document","querySelector","cameraOutput","cameraSensor","onclick","width","videoWidth","height","videoHeight","getContext","drawImage","src","toDataURL","classList","add","Tesseract","recognize","logger","m","console","log","then","text","data","alert","window","addEventListener","navigator","mediaDevices","getUserMedia","stream","getTracks","srcObject","catch","error"],"mappings":"iIAAA,4BAGIA,EAAc,CAAEC,MAAO,CAAEC,WAAY,eAAiBC,OAAO,GAC3DC,EAAaC,SAASC,cAAc,iBACtCC,EAAeF,SAASC,cAAc,mBACtCE,EAAeH,SAASC,cAAc,mBACtBD,SAASC,cAAc,oBAe7BG,QAAU,WACpBD,EAAaE,MAAQN,EAAWO,WAChCH,EAAaI,OAASR,EAAWS,YACjCL,EAAaM,WAAW,MAAMC,UAAUX,EAAY,EAAG,GACvDG,EAAaS,IAAMR,EAAaS,UAAU,cAC1CV,EAAaW,UAAUC,IAAI,SAG3BC,IAAUC,UACNd,EAAaS,IACb,MACA,CAAEM,OAAQ,SAAAC,GAAC,OAAIC,QAAQC,IAAIF,MAC7BG,MAAK,YAAyB,IAAdC,EAAa,EAArBC,KAAQD,KACdE,MAAMF,OAKdG,OAAOC,iBAAiB,QA/BxB,WACIC,UAAUC,aACLC,aAAalC,GACb0B,MAAK,SAAUS,GACAA,EAAOC,YAAY,GAC/BhC,EAAWiC,UAAYF,KAE1BG,OAAM,SAAUC,GACbf,QAAQe,MAAM,6BAA8BA,SAuBX,K","file":"static/js/main.f53bc7e4.chunk.js","sourcesContent":["import Tesseract from 'tesseract.js';\n\n// Set constraints for the video stream\nvar constraints = { video: { facingMode: \"environment\" }, audio: false };// Define constants\nconst cameraView = document.querySelector(\"#camera--view\"),\n    cameraOutput = document.querySelector(\"#camera--output\"),\n    cameraSensor = document.querySelector(\"#camera--sensor\"),\n    cameraTrigger = document.querySelector(\"#camera--trigger\")// Access the device camera and stream to cameraView\n\nfunction cameraStart() {\n    navigator.mediaDevices\n        .getUserMedia(constraints)\n        .then(function (stream) {\n            var track = stream.getTracks()[0];\n            cameraView.srcObject = stream;\n        })\n        .catch(function (error) {\n            console.error(\"Oops. Something is broken.\", error);\n        });\n}\n\n// Take a picture when cameraTrigger is tapped\ncameraTrigger.onclick = function () {\n    cameraSensor.width = cameraView.videoWidth;\n    cameraSensor.height = cameraView.videoHeight;\n    cameraSensor.getContext(\"2d\").drawImage(cameraView, 0, 0);\n    cameraOutput.src = cameraSensor.toDataURL(\"image/webp\");\n    cameraOutput.classList.add(\"taken\");\n\n    // Perform OCR on the image\n    Tesseract.recognize(\n        cameraOutput.src,\n        'eng',\n        { logger: m => console.log(m) }\n    ).then(({ data: { text } }) => {\n        alert(text);\n    })\n};\n\n// Start the video stream when the window loads\nwindow.addEventListener(\"load\", cameraStart, false);"],"sourceRoot":""}